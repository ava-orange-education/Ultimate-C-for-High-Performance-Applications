<Window x:Class="ChatRoomClient.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:viewModels="clr-namespace:ChatRoomClient.ViewModels"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewModels:MainWindowViewModel}"
        xmlns:local="clr-namespace:ChatRoomClient.ViewModels"
        xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:views="clr-namespace:ChatRoomClient.Views"
        Title="Chat Room" MinHeight="400" MinWidth="1000" Width="1000" Height="400" Background="{DynamicResource AppBackground}">
    <Window.Resources>

        <DataTemplate x:Key="UserMessageTemplate">
            <Border Background="#e0e0e0" Padding="10" Margin="5" CornerRadius="10" HorizontalAlignment="Left" MaxWidth="300">
                <StackPanel>
                    <TextBlock Text="{Binding UserName}" FontWeight="Bold" />
                    <TextBlock Text="{Binding Message}" TextWrapping="Wrap" />
                </StackPanel>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="OwnMessageTemplate">
            <Border Background="#4A90E2" Padding="10" Margin="5" CornerRadius="10" HorizontalAlignment="Right" MaxWidth="300">
                <StackPanel>
                    <TextBlock Text="You" FontWeight="Bold" Foreground="White" />
                    <TextBlock Text="{Binding Message}" TextWrapping="Wrap" Foreground="White" />
                </StackPanel>
            </Border>
        </DataTemplate>

        <CollectionViewSource x:Key="MessagesViewSource" Source="{Binding MessagesPanel}">
            <CollectionViewSource.SortDescriptions>
                <componentmodel:SortDescription PropertyName="Timestamp" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="UsersViewSource" Source="{Binding UsersList}">
            <CollectionViewSource.SortDescriptions>
                <componentmodel:SortDescription PropertyName="UserName" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="ChatRoomsViewSource" Source="{Binding ChatRoomsList}">
            <CollectionViewSource.SortDescriptions>
                <componentmodel:SortDescription PropertyName="Name" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding LogoutCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid Margin="10,0,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="250" />
            </Grid.ColumnDefinitions>

            <!-- Left Panel: Chat Rooms -->
            <Border Grid.Column="0" Background="{DynamicResource LightBackground}" Padding="10" BorderBrush="{DynamicResource BorderBrushColor}" BorderThickness="0,0,1,0" CornerRadius="8">
                <DockPanel LastChildFill="True">
                    <Button x:Name="CreateRoomButton" Content="+ Create Room" Height="40" Margin="0,0,0,10" DockPanel.Dock="Top" Command="{Binding CreateChatRoomCommand}"/>
                    <Popup PlacementTarget="{Binding ElementName=CreateRoomButton}" Placement="Bottom" StaysOpen="False" IsOpen="{Binding IsCreateRoomPopupOpen}">
                        <views:CreateRoomPopup />
                    </Popup>
                    <ListBox x:Name="ChatRoomsList" Background="Transparent" BorderThickness="0" ItemsSource="{Binding Source={StaticResource ChatRoomsViewSource}}" SelectedItem="{Binding SelectedChatRoom}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" FontWeight="{Binding FontWeight}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </Border>

            <!-- Center Panel: Messages -->
            <Grid Grid.Column="1" Margin="10,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border Background="{DynamicResource LightBackground}" BorderBrush="{DynamicResource BorderBrushColor}" BorderThickness="0,0,0,1" Padding="10" CornerRadius="8">
                    <ScrollViewer x:Name="MessagesScrollViewer" VerticalScrollBarVisibility="Auto" Focusable="False" FocusManager.IsFocusScope="False">
                        <ItemsControl x:Name="MessagesPanel" ItemsSource="{Binding Source={StaticResource MessagesViewSource}}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentPresenter Content="{Binding}">
                                        <ContentPresenter.Style>
                                            <Style TargetType="ContentPresenter">
                                                <!-- Default fallback -->
                                                <Setter Property="ContentTemplate" Value="{StaticResource UserMessageTemplate}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsOwnMessage}" Value="True">
                                                        <Setter Property="ContentTemplate" Value="{StaticResource OwnMessageTemplate}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentPresenter.Style>
                                    </ContentPresenter>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Border>

                <DockPanel Grid.Row="1" Margin="0,10,0,0" VerticalAlignment="Bottom" LastChildFill="True">
                    <Button x:Name="SendButton" Width="50" Height="50" Background="{DynamicResource PrimaryColor}" DockPanel.Dock="Right" BorderThickness="0" Margin="0,0,5,0" ToolTip="Send" Command="{Binding SendMessageCommand}">
                        <Viewbox Stretch="Uniform">
                            <Path Data="M2,21 L23,12 L2,3 L2,10 L17,12 L2,14 L2,21 Z" Fill="White"/>
                        </Viewbox>
                    </Button>
                    <TextBox x:Name="MessageInput" HorizontalAlignment="Stretch" Margin="0,0,10,0" MinWidth="400" VerticalContentAlignment="Center" Text="{Binding MessageInput, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.InputBindings>
                            <KeyBinding Gesture="Enter" Command="{Binding SendMessageCommand}" />
                        </TextBox.InputBindings>
                        <TextBox.Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource GlobalTextboxStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedItem, ElementName=ChatRoomsList}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SelectedItem, ElementName=ChatRoomsList}">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </DockPanel>
            </Grid>

            <!-- Right Panel: Users -->
            <Border Grid.Column="2" Background="{DynamicResource LightBackground}" Padding="10" BorderBrush="{DynamicResource BorderBrushColor}" BorderThickness="1,0,0,0" CornerRadius="8">
                <DockPanel LastChildFill="True">
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10" DockPanel.Dock="Top" HorizontalAlignment="Center">
                        <Button x:Name="AddUserButton" Content="+ Add" Width="70" Command="{Binding AddRoomUserCommand}" />
                        <Button x:Name="RemoveUserButton" Content="- Remove" Width="80" Command="{Binding RemoveRoomUserCommand}" />
                    </StackPanel>
                    <Popup PlacementTarget="{Binding ElementName=AddUserButton}" Placement="Bottom" StaysOpen="False" IsOpen="{Binding IsAddUsersPopupOpen}">
                        <views:AddUsersPopup />
                    </Popup>
                    <ListBox x:Name="UsersList" Background="Transparent" BorderThickness="0" ItemsSource="{Binding Source={StaticResource UsersViewSource}}" DisplayMemberPath="UserName" SelectedItem="{Binding SelectedUser}" />
                </DockPanel>
            </Border>
        </Grid>

        <Grid x:Name="LoginOverlay" Background="#AA000000" FocusManager.FocusedElement="{Binding ElementName=ChatUserNameBox}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="LoginStates">
                    <VisualState x:Name="NotLoggedIn">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="LoginOverlay" 
                                     Storyboard.TargetProperty="Opacity" 
                                     To="1" Duration="0:0:0.3" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="LoggedIn">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="LoginOverlay" 
                                     Storyboard.TargetProperty="Opacity" 
                                     To="0" Duration="0:0:0.3" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                 To="0"
                                                 Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                 To="1"
                                                 Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <!-- Your Login Content Here -->
            <Border Width="300" Background="{DynamicResource LightBackground}" CornerRadius="8" Padding="20" VerticalAlignment="Center" HorizontalAlignment="Center">
                <StackPanel>
                    <TextBlock Text="Enter your name" FontSize="18" FontWeight="Bold" TextAlignment="Center" Margin="0,0,0,20"/>
                    <TextBox x:Name="ChatUserNameBox" Text="{Binding ChatUserName, UpdateSourceTrigger=PropertyChanged}" MinWidth="200" Height="30" Margin="0,0,0,20">
                        <TextBox.InputBindings>
                            <KeyBinding Gesture="Enter" Command="{Binding ConfirmChatUserNameCommand}" />
                        </TextBox.InputBindings>
                    </TextBox>
                    <Button Content="Continue" Background="{DynamicResource PrimaryColor}" Foreground="White" Height="40" Command="{Binding ConfirmChatUserNameCommand}"/>
                </StackPanel>
            </Border>
        </Grid>

    </Grid>

</Window>
